name: umm
on:
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: ${{secrets.DB_NAME}}
          POSTGRES_USER: ${{secrets.DB_USER}}
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
        ports:
          - 5432:5432
    steps:

      - name : Install psql
        run: |
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends postgresql-client

      - name: Init DB
        run: |
          PGPASSWORD=${{secrets.DB_PASSWORD}} psql -U ${{secrets.DB_USER}} -h localhost -p 5432 -d ${{secrets.DB_NAME}} <<EOF ${{secrets.DB_SQL}} EOF

      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.8
          cache-encryption-key: ${{ secrets.GradleEncryptionKey }}

      - name: Build application
        env:
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          SPRING_DATASOURCE_URL: ${{secrets.DB_URL}}
          SPRING_DATASOURCE_USERNAME: ${{secrets.DB_USER}}
          SPRING_DATASOURCE_PASSWORD: ${{secrets.DB_PASSWORD}}
        run: |
          chmod +x ./gradlew
          ./gradlew build

      - name: Docker hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker image build
        run: |
          docker build -t ${{secrets.DOCKERHUB_USERNAME}}/umm .

      - name: Docker Hub push
        run: docker push ${{secrets.DOCKERHUB_USERNAME}}/umm

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          timeout: '30s'
          script: |
            bash ${{secrets.DEPLOY_SCRIPT}}